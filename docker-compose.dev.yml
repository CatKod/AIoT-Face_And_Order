version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres_dev:
    image: postgres:15-alpine
    container_name: cafe_postgres_dev
    environment:
      POSTGRES_DB: cafe_system_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 271205
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    networks:
      - cafe_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cafe_system_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for Development
  pgadmin_dev:
    image: dpage/pgadmin4:latest
    container_name: cafe_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@cafe.com
      PGADMIN_DEFAULT_PASSWORD: dev123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
      - ./pgadmin-servers-dev.json:/pgadmin4/servers.json:ro
    ports:
      - "8081:80"
    networks:
      - cafe_dev_network
    depends_on:
      postgres_dev:
        condition: service_healthy

  # Redis for Development
  redis_dev:
    image: redis:7-alpine
    container_name: cafe_redis_dev
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    networks:
      - cafe_dev_network

  # Development Cafe Application
  cafe_app_dev:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: cafe_app_dev
    environment:
      # Database Configuration
      DATABASE_TYPE: postgresql
      DB_HOST: postgres_dev
      DB_PORT: 5432
      DB_NAME: cafe_system_dev
      DB_USER: postgres
      DB_PASSWORD: dev_password
      
      # Redis Configuration
      REDIS_HOST: redis_dev
      REDIS_PORT: 6379
      
      # Flask Configuration
      FLASK_HOST: 0.0.0.0
      FLASK_PORT: 5000
      FLASK_DEBUG: "true"
      FLASK_ENV: development
      FLASK_SECRET_KEY: "dev-secret-key"
      
      # Face Recognition Configuration
      FACE_RECOGNITION_TOLERANCE: 0.6
      CUSTOMER_DIR: /app/data/customers
      DATABASE_DIR: /app/data/database
      
      # Development flags
      PYTHONUNBUFFERED: 1
      WATCHDOG_ENABLED: "true"
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/__pycache__
      - /app/data
      - dev_logs:/app/logs
    ports:
      - "5001:5000"
    networks:
      - cafe_dev_network
    depends_on:
      postgres_dev:
        condition: service_healthy
    command: ["python", "main.py", "--mode", "web"]
    stdin_open: true
    tty: true

  # Mailhog for email testing in development
  mailhog:
    image: mailhog/mailhog:latest
    container_name: cafe_mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - cafe_dev_network

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  dev_logs:
    driver: local

networks:
  cafe_dev_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
